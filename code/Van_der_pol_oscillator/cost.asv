

function [J] = cost(ute,xtr,utr,ymu,ys,hyp,ytr,Q,R)
N = size (ute,2);
n =size(xtr,2);
xtrc = [xtr,utr];
J =0;


cov = {@covSEard}; 
mean = {@meanLinear};
lik = {'likGauss'};    % Gauss likelihoods
inf = {'infGaussLik'};


mu =  ymu;
for i=1:N
   if i==1
        mu_p = [ymu,ute(i)]; % µ_tilmda = [µt,ut]
        var_p = diag(ys); % Σ_tilda = blkdiag[Σt, 0] 
        xte = [mu(i,:),ute(i)];
    else
        % mu_p = [mu_a(i-1,:),ute(i)];
        % var_p = blkdiag(var_a(:,:,i-1),0);
        xte = [mu,ute(i)];
   end     
   for l =1:n
    [mu(l), vs(l)] = gp(hyp.state(l), inf, mean, cov, lik, xtrc, ytr(:,l),xte);
   end
   % [mu_a(i,:),var_a(:,:,i)] = Gp_transition_change(mu_p, var_p,hyp,xtrc, ytr);

    J = J + mu*Q*mu'+ ute(i)*R*ute(i);
    % J = J + mu_a(i,:)*Q*mu_a(i,:)'+ ute(i)*R*ute(i);
end 
% J = sum(diag(mu_a'*Q*mu_a)) + ute*R*ute';
end



